set(SGX_HW ON CACHE BOOL "SGX Mode Parameter" FORCE)
set(CMAKE_BUILD_TYPE "Release")
#set(CMAKE_BUILD_TYPE "Debug")
if (CMAKE_BUILD_TYPE STREQUAL "Debug")
    set(SGX_MODE Debug CACHE BOOL "SGX Mode Parameter" FORCE)
else()
    set(SGX_MODE PreRelease CACHE BOOL "SGX Mode Parameter" FORCE)
endif()
cmake_minimum_required(VERSION 3.1)
project(DEBEStore)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED TRUE)
set(CMAKE_VERBOSE_MAKEFILE TRUE)
set(CMAKE_MODULE_PATH /usr/share/cmake-3.16/Modules/)
list(APPEND CMAKE_MODULE_PATH ${DEBEStore_SOURCE_DIR}/cmake)
message(STATUS "CMAKE MODULE Path: ${CMAKE_MODULE_PATH}")

set(EXECUTABLE_OUTPUT_PATH ${DEBEStore_SOURCE_DIR}/bin)
set(LIBRARY_OUTPUT_PATH ${DEBEStore_SOURCE_DIR}/lib)

if (${SGX_HW})
    set(MY_OPTION "-Wno-implicit-exception-spec-mismatch -DCHECK_SGX_HW=1")
else()
    set(MY_OPTION "-Wno-implicit-exception-spec-mismatch -DCHECK_SGX_HW=0")
endif()
set(CMAKE_C_FLAGS_DEBUG "-Wall -g -ggdb3 ${MY_OPTION}") 
# set(CMAKE_CXX_FLAGS_DEBUG "-O0 -Wall -fsanitize=address -fno-omit-frame-pointer -g -ggdb3") 
set(CMAKE_CXX_FLAGS_DEBUG "-O0 -Wall -g -ggdb ${MY_OPTION}") # for gbd
set(CMAKE_C_FLAGS_RELEASE "-O3 -Wall ${MY_OPTION}") 
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -Wall ${MY_OPTION}") 

SET (CMAKE_C_COMPILER "/usr/bin/clang")
SET (CMAKE_CXX_COMPILER "/usr/bin/clang++")
SET (CMAKE_AR "/usr/bin/llvm-ar")
SET (CMAKE_LINKER "/usr/bin/llvm-ld")
SET (CMAKE_NM "/usr/bin/llvm-nm")
SET (CMAKE_OBJDUMP "/usr/bin/llvm-objdump")
SET (CMAKE_RANLIB "/usr/bin/llvm-ranlib")

add_subdirectory(src)
